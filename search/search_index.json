{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ScrAPD \u00b6","title":"Index"},{"location":"#scrapd","text":"","title":"ScrAPD"},{"location":"how-it-works/","text":"How it works \u00b6 The first objective of the ScrAPD tool set is to create a fully automated pipeline to collect traffic fatality data for the City of Austin. The pipeline has 2 branches. The first branch (on the left) is for the data extracted from the APD reports and reflects the current data. The second one manages archived data provided by the City of Austin and the state of Texas via TxDoT. The archived data are published between March and June of the following year (i.e.: CoA pusblished its 2018 data set in March 2019, TxDot dot is supposed to provide the 2018 data around June or July 2019). Current data (APD) \u00b6 APD releases crash reports on the city website. Every hour, ScrAPD checks for new reports. If a new report is detected, it is extracted and stored in the raw data set of the current year. Augmentations are generated and applied to the data set to add missing data (for instance the crash coordinates). This creates the augmented data set. The raw and augmented data sets are stored on GitHub and data.world in JSON format. Archived data (CoA and TxDot) \u00b6 CoA and TxDot release their data. A tool is manually triggered (twice a year) to check for the new data sets. The new data sets are downloaded. They are processed and converted to the ScrAPD format. The data sets are stored on GitHub in JSON format. FAQ \u00b6 Why do we need two pipelines? \u00b6 The first reason is the difference of delay between sources. APD releases a report when a crash case is closed. CoA and TxDot release their information the year after. The second reason is that the data sets do not contain exactly the same information and break the queries and graph generation. That's why we have scrapd data sets and archived data sets. What are augmentations? \u00b6 Augmentations are a mechanim to enhance data sets by adding information from other sources. An example is the crash coordinates, which are not provided by APD. As a result, we generate an augmentation using an augmenter which converts the crash location to coordinates using the GeoCensus database. The augmenter specification is defined in the Datasets wiki.","title":"How it works"},{"location":"how-it-works/#how-it-works","text":"The first objective of the ScrAPD tool set is to create a fully automated pipeline to collect traffic fatality data for the City of Austin. The pipeline has 2 branches. The first branch (on the left) is for the data extracted from the APD reports and reflects the current data. The second one manages archived data provided by the City of Austin and the state of Texas via TxDoT. The archived data are published between March and June of the following year (i.e.: CoA pusblished its 2018 data set in March 2019, TxDot dot is supposed to provide the 2018 data around June or July 2019).","title":"How it works"},{"location":"how-it-works/#current-data-apd","text":"APD releases crash reports on the city website. Every hour, ScrAPD checks for new reports. If a new report is detected, it is extracted and stored in the raw data set of the current year. Augmentations are generated and applied to the data set to add missing data (for instance the crash coordinates). This creates the augmented data set. The raw and augmented data sets are stored on GitHub and data.world in JSON format.","title":"Current data (APD)"},{"location":"how-it-works/#archived-data-coa-and-txdot","text":"CoA and TxDot release their data. A tool is manually triggered (twice a year) to check for the new data sets. The new data sets are downloaded. They are processed and converted to the ScrAPD format. The data sets are stored on GitHub in JSON format.","title":"Archived data (CoA and TxDot)"},{"location":"how-it-works/#faq","text":"","title":"FAQ"},{"location":"how-it-works/#why-do-we-need-two-pipelines","text":"The first reason is the difference of delay between sources. APD releases a report when a crash case is closed. CoA and TxDot release their information the year after. The second reason is that the data sets do not contain exactly the same information and break the queries and graph generation. That's why we have scrapd data sets and archived data sets.","title":"Why do we need two pipelines?"},{"location":"how-it-works/#what-are-augmentations","text":"Augmentations are a mechanim to enhance data sets by adding information from other sources. An example is the crash coordinates, which are not provided by APD. As a result, we generate an augmentation using an augmenter which converts the crash location to coordinates using the GeoCensus database. The augmenter specification is defined in the Datasets wiki.","title":"What are augmentations?"},{"location":"guides/update-branch/","text":"Keeping your branch up-to-date \u00b6 When working with other developers, it can be that the branch your are working on becomes out of sync with the base branch. In your Github PR your will see the following message: If this happens, you need to retrieve all the changes from upstream, and apply them to your branch by rebasing it on top of master. Open Terminal. Change the current working directory to your local project. Sync up your fork with upstream . git checkout master git pull upstream master git push origin master Rebase your branch. git checkout - git rebase master Update your branch. git push origin -f Github help links \u00b6 Syncing a fork Pushing to a remote","title":"Keeping your branch up-to-date"},{"location":"guides/update-branch/#keeping-your-branch-up-to-date","text":"When working with other developers, it can be that the branch your are working on becomes out of sync with the base branch. In your Github PR your will see the following message: If this happens, you need to retrieve all the changes from upstream, and apply them to your branch by rebasing it on top of master. Open Terminal. Change the current working directory to your local project. Sync up your fork with upstream . git checkout master git pull upstream master git push origin master Rebase your branch. git checkout - git rebase master Update your branch. git push origin -f","title":"Keeping your branch up-to-date"},{"location":"guides/update-branch/#github-help-links","text":"Syncing a fork Pushing to a remote","title":"Github help links"},{"location":"learning/learning/","text":"Learning resources \u00b6 Sometimes people are affraid to tackle a task or join a project because they think they do not have the appriopriate knoweldge. While it might sometimes be true, we, at Request Yo Racks, consider our projects as the best opportunity to learn! And to make it easier for you to learn the ropes, we compiled the best resources! Beginners \u00b6 Let's start with the fundamentals! Terminal \u00b6 The \"Really friendly intro to the command line\" is a must read/watch for beginners! While targeted for Mac users, it may help others as well. It comes with a nice illustrated support and a video. https://hellowebbooks.com/learn-command-line Enjoy this online class which will demistify the terminal in just 40 minutes! https://www.udemy.com/command-line An interactive tutorial that will reconcile you with the terminal. https://linuxsurvival.com/linux-tutorial-introduction A tutorial dividded in 13 sections to bring you from newbie to moderate wizard. https://ryanstutorials.net/linuxtutorial Git/GitHub \u00b6 Learn git and GitHub using the GitHub Learning Lab . https://try.github.io Become a git guru with Atlassian. https://www.atlassian.com/git/tutorials Intermediate \u00b6 Now that you leveled up, let's bring some fun! Python \u00b6 Completely new to Python? Let Real Python help you learn everything about it. https://realpython.com/start-here/ From zero to Hero with Dive Into Python 3 . This book covers all the facets of python, from writing a simple program, to using REST APIs, via unit tests. http://getpython3.com/diveintopython3/ The Hitchhiker\u2019s Guide to Python! is also a classic. An opiniated handbook which aims at making you a python expert. https://docs.python-guide.org/ Advanced \u00b6 \"I'm here to serve you master.\"","title":"Learning resources"},{"location":"learning/learning/#learning-resources","text":"Sometimes people are affraid to tackle a task or join a project because they think they do not have the appriopriate knoweldge. While it might sometimes be true, we, at Request Yo Racks, consider our projects as the best opportunity to learn! And to make it easier for you to learn the ropes, we compiled the best resources!","title":"Learning resources"},{"location":"learning/learning/#beginners","text":"Let's start with the fundamentals!","title":"Beginners"},{"location":"learning/learning/#terminal","text":"The \"Really friendly intro to the command line\" is a must read/watch for beginners! While targeted for Mac users, it may help others as well. It comes with a nice illustrated support and a video. https://hellowebbooks.com/learn-command-line Enjoy this online class which will demistify the terminal in just 40 minutes! https://www.udemy.com/command-line An interactive tutorial that will reconcile you with the terminal. https://linuxsurvival.com/linux-tutorial-introduction A tutorial dividded in 13 sections to bring you from newbie to moderate wizard. https://ryanstutorials.net/linuxtutorial","title":"Terminal"},{"location":"learning/learning/#gitgithub","text":"Learn git and GitHub using the GitHub Learning Lab . https://try.github.io Become a git guru with Atlassian. https://www.atlassian.com/git/tutorials","title":"Git/GitHub"},{"location":"learning/learning/#intermediate","text":"Now that you leveled up, let's bring some fun!","title":"Intermediate"},{"location":"learning/learning/#python","text":"Completely new to Python? Let Real Python help you learn everything about it. https://realpython.com/start-here/ From zero to Hero with Dive Into Python 3 . This book covers all the facets of python, from writing a simple program, to using REST APIs, via unit tests. http://getpython3.com/diveintopython3/ The Hitchhiker\u2019s Guide to Python! is also a classic. An opiniated handbook which aims at making you a python expert. https://docs.python-guide.org/","title":"Python"},{"location":"learning/learning/#advanced","text":"\"I'm here to serve you master.\"","title":"Advanced"},{"location":"resources/design/","text":"Design \u00b6 Laws \u00b6 Pittsburgh Mayor Bill Peduto joins other mayors to push state for safer bike lanes ( May 24, 2019 ) Bike lanes \u00b6 Nacto: Urban Bikeway Design Guide - One-Way Protected Cycle Tracks Regional Bicycle Connections Study Design guidelines 14 ways to make bike lanes better ( May 15, 2014 ) $600 temporary bike lane Beer Protected Bike Lanes Bikeway facility design manual A new generation of bike lane separators is starting to arrive ( August 25, 2017 ) These Temporary Bike Lane Barriers Let Cities Experiment With Better Biking Infrastructure ( 2017/08/30 ) Dero: protected bikeway & pedestrian solutions How Do You Design an Effective Bike-Lane Barrier? ( September 13, 2017 ) Pop-up \u00b6 One-Day Protected Bike Lane Demos Have Swept America this Summer ( August 14, 2014 ) How One-Day Plazas and Bike Lanes Can Change a City Forever The summer of demos: One-day protected bike lanes sweep across America","title":"Design"},{"location":"resources/design/#design","text":"","title":"Design"},{"location":"resources/design/#laws","text":"Pittsburgh Mayor Bill Peduto joins other mayors to push state for safer bike lanes ( May 24, 2019 )","title":"Laws"},{"location":"resources/design/#bike-lanes","text":"Nacto: Urban Bikeway Design Guide - One-Way Protected Cycle Tracks Regional Bicycle Connections Study Design guidelines 14 ways to make bike lanes better ( May 15, 2014 ) $600 temporary bike lane Beer Protected Bike Lanes Bikeway facility design manual A new generation of bike lane separators is starting to arrive ( August 25, 2017 ) These Temporary Bike Lane Barriers Let Cities Experiment With Better Biking Infrastructure ( 2017/08/30 ) Dero: protected bikeway & pedestrian solutions How Do You Design an Effective Bike-Lane Barrier? ( September 13, 2017 )","title":"Bike lanes"},{"location":"resources/design/#pop-up","text":"One-Day Protected Bike Lane Demos Have Swept America this Summer ( August 14, 2014 ) How One-Day Plazas and Bike Lanes Can Change a City Forever The summer of demos: One-day protected bike lanes sweep across America","title":"Pop-up"},{"location":"resources/statistics/","text":"Statistics \u00b6 Governors Highway Safety Association \u00b6 Pedestrian Traffic Fatalities by State: 2018 Preliminary Data Bicyclist and Pedestrian Safety","title":"Statistics"},{"location":"resources/statistics/#statistics","text":"","title":"Statistics"},{"location":"resources/statistics/#governors-highway-safety-association","text":"Pedestrian Traffic Fatalities by State: 2018 Preliminary Data Bicyclist and Pedestrian Safety","title":"Governors Highway Safety Association"},{"location":"resources/tools/","text":"Tools \u00b6 How is my driving? \u00b6 How is my driving app What if More People Could Issue Parking Tickets? ( 2019/05/23 ) How's My Driving Beta Test Demo - May 2019 ( 2019/05/05 )","title":"Tools"},{"location":"resources/tools/#tools","text":"","title":"Tools"},{"location":"resources/tools/#how-is-my-driving","text":"How is my driving app What if More People Could Issue Parking Tickets? ( 2019/05/23 ) How's My Driving Beta Test Demo - May 2019 ( 2019/05/05 )","title":"How is my driving?"}]}